plugins {
    id("java")
}

group = "org.example"
version = "1.0-SNAPSHOT"

repositories {
    mavenCentral()
}

dependencies {

    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    // Flink Dependencies
    compileOnly 'org.apache.flink:flink-streaming-java:1.18.0'
    //implementation 'org.apache.flink:flink-connector-kafka:3.0.1-1.18'
    implementation 'org.apache.flink:flink-connector-kafka_2.11:1.14.4'
    implementation 'org.apache.flink:flink-connector-jdbc:3.1.1-1.17'
    implementation 'org.apache.flink:flink-connector-kinesis_2.11:1.14.0'
    //implementation("org.apache.flink:flink-connector-kinesis:1.15.2")

    implementation 'org.apache.flink:flink-streaming-java_2.11:1.14.0'

    //connector
    implementation 'org.postgresql:postgresql:42.6.0'


    //Utils
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.5'




    testImplementation(platform("org.junit:junit-bom:5.9.1"))
    testImplementation("org.junit.jupiter:junit-jupiter")
}

tasks.test {
    useJUnitPlatform()
}
jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes(
                'Main-Class': 'org.example.Main'
        )
    }

    // Create a fat JAR (shaded JAR) with all dependencies
    from {
        configurations.runtimeClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}